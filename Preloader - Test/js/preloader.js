// Generated by CoffeeScript 1.7.1
(function() {
  this.Preloader = (function() {
    function Preloader(game) {
      this.images = new Array();
      this.preloaded = 0;
      this.game = game;
      this.path = "";
    }

    Preloader.prototype.setPath = function(path) {
      this.path = path;
      return console.log("[Preloader] Set path to: " + path);
    };

    Preloader.prototype.addImage = function(src, name) {
      if (!this.images.push('{ "name": "' + name + '", "src": "' + this.path + src + '", "image": null }')) {
        throw "[Preloader] Error while adding image";
      }
      return console.log("[Preloader] Added image: Path: " + this.path + src + ", Name: " + name);
    };

    Preloader.prototype.getImage = function(name) {
      var i, json, _base, _i, _ref, _results;
      _results = [];
      for (i = _i = 0, _ref = this.images.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
        json = JSON.parse(this.images[i]);
        if (json["name"] === name) {
          _results.push((_base = this.images)[i] != null ? _base[i] : _base[i] = this.getImage("no_images"));
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    };

    Preloader.prototype.preloadImages = function() {
      var i, image, json, name, src, _i, _ref, _results;
      if (this.images.length <= 0) {
        this.updateBar();
      }
      _results = [];
      for (i = _i = 0, _ref = this.images.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
        json = JSON.parse(this.images[i]);
        name = json["name"];
        src = json["src"];
        image = new Image();
        image.src = src;
        _results.push(image.onload = (function(_this) {
          return function() {
            _this.preloaded++;
            _this.images[i] = [
              {
                "name": name,
                "src": src,
                "image": image
              }
            ];
            return _this.updateBar();
          };
        })(this));
      }
      return _results;
    };

    Preloader.prototype.updateBar = function() {
      var bar, total, w, wb;
      bar = document.getElementById("preloader_move");
      wb = 400;
      total = this.images.length - 1;
      if (total <= 0) {
        bar.style.width = wb + "px";
        return;
      }
      w = wb / total;
      bar.style.width = w * this.preloaded + "px";
      if (this.preloaded >= total) {
        return this.game.preloadDone();
      }
    };

    return Preloader;

  })();

}).call(this);
